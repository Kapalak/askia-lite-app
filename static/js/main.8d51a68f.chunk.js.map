{"version":3,"sources":["services/auth.service.ts","logo.svg","components/login.component.tsx","components/home.component.tsx","components/profile.component.tsx","services/auth-header.ts","services/user.service.ts","common/EventBus.ts","components/board-user.component.tsx","components/board-moderator.component.tsx","components/board-admin.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_PORTAL_URL","username","password","axios","post","userName","then","catch","error","console","log","response","data","get","login","user","id","guid","email","localStorage","setItem","JSON","stringify","removeItem","userStr","getItem","parse","Login","props","handleLogin","bind","state","loading","message","Yup","shape","required","formValue","this","setState","AuthService","getInfo","history","push","window","location","reload","resMessage","toString","className","src","MyImage","alt","initialValues","validationSchema","onSubmit","htmlFor","name","type","component","disabled","role","Component","Home","content","Profile","redirect","userReady","currentUser","accessToken","getCurrentUser","to","roles","map","index","authHeader","Authorization","API_URL","headers","eventBus","on","event","callback","document","addEventListener","e","dispatch","dispatchEvent","CustomEvent","detail","remove","removeEventListener","BoardUser","UserService","getUserBoard","status","EventBus","BoardAdmin","getModeratorBoard","getAdminBoard","App","logOut","showModeratorBoard","showAdminBoard","undefined","logout","href","onClick","exact","path","BoardModerator","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.8d51a68f.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport IUser from \"../types/user.type\";\r\n\r\n// const API_PORTAL_URL = \"https://rapide-dev.ipsosinteractive.com/AskiaPortal/api/\";\r\n// const API_PORTAL_URL = \"http://localhost:8000/AskiaPortal/api/\";\r\nconst API_PORTAL_URL = \"https://8dd0d497-6cca-40d8-9835-5ca72559da33.mock.pstmn.io/AskiaPortal/api/\";\r\n\r\nclass AuthService {\r\n  login(username: string, password: string) {    \r\n    return axios\r\n    .post(API_PORTAL_URL + \"Account/SignIn\", {\r\n      userName: username,\r\n      password\r\n    })\r\n    .then(() => {\r\n      return true;\r\n    })\r\n    .catch(error => {\r\n      console.log(error.response.data.error);\r\n      return false;\r\n   });\r\n  }\r\n\r\n  getInfo() { \r\n    return axios.get(API_PORTAL_URL + \"Account/Info\")\r\n    .then(response => {\r\n      if (response.data.login) {\r\n        var user = {} as IUser;\r\n        user.id = response.data.guid;\r\n        user.username = response.data.login;\r\n        user.email = response.data.email;\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n        console.log(user);\r\n        return user;\r\n      }\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  getCurrentUser() {\r\n    const userStr = localStorage.getItem(\"user\");\r\n    if (userStr) return JSON.parse(userStr);\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","export default __webpack_public_path__ + \"static/media/logo.b197ed51.svg\";","import MyImage from \"../logo.svg\";\r\nimport { Component } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\ninterface RouterProps {\r\n  history: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<RouterProps>;\r\n\r\ntype State = {\r\n  username: string;\r\n  password: string;\r\n  loading: boolean;\r\n  message: string;\r\n};\r\n\r\nexport default class Login extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  validationSchema() {\r\n    return Yup.object().shape({\r\n      username: Yup.string().required(\"This field is required!\"),\r\n      password: Yup.string().required(\"This field is required!\"),\r\n    });\r\n  }\r\n\r\n  handleLogin(formValue: { username: string; password: string }) {\r\n    const { username, password } = formValue;\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true,\r\n    });\r\n\r\n\r\n\r\n    AuthService.login(username, password).then(() =>\r\n      AuthService.getInfo()\r\n        .then(\r\n          () => {\r\n            this.props.history.push(\"/askia-lite-app/profile\");\r\n            window.location.reload();\r\n          },\r\n          (error) => {\r\n            const resMessage =\r\n              (error.response &&\r\n                error.response.data &&\r\n                error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n\r\n            this.setState({\r\n              loading: false,\r\n              message: resMessage,\r\n            });\r\n          }\r\n        )\r\n        .catch((error) => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n          console.log(resMessage);\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage,\r\n          });\r\n        })\r\n    );\r\n\r\n    // AuthService.login(username, password).then(\r\n    //   () => {\r\n    //     this.props.history.push(\"/profile\");\r\n    //     window.location.reload();\r\n    //   },\r\n    //   error => {\r\n    //     const resMessage =\r\n    //       (error.response &&\r\n    //         error.response.data &&\r\n    //         error.response.data.message) ||\r\n    //       error.message ||\r\n    //       error.toString();\r\n\r\n    //     this.setState({\r\n    //       loading: false,\r\n    //       message: resMessage\r\n    //     });\r\n    //   }\r\n    // );\r\n  }\r\n\r\n  render() {\r\n    const { loading, message } = this.state;\r\n\r\n    const initialValues = {\r\n      username: \"\",\r\n      password: \"\",\r\n    };\r\n\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img src={MyImage} alt=\"profile-img\" className=\"profile-img-card\" />\r\n\r\n          <Formik\r\n            initialValues={initialValues}\r\n            validationSchema={this.validationSchema}\r\n            onSubmit={this.handleLogin}\r\n          >\r\n            <Form>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"username\">Username</label>\r\n                <Field name=\"username\" type=\"text\" className=\"form-control\" />\r\n                <ErrorMessage\r\n                  name=\"username\"\r\n                  component=\"div\"\r\n                  className=\"alert alert-danger\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"password\">Password</label>\r\n                <Field\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                  className=\"alert alert-danger\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block\"\r\n                  disabled={loading}\r\n                >\r\n                  {loading && (\r\n                    <span className=\"spinner-border spinner-border-sm\"></span>\r\n                  )}\r\n                  <span>Login</span>\r\n                </button>\r\n              </div>\r\n\r\n              {message && (\r\n                <div className=\"form-group\">\r\n                  <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {message}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Form>\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\n\r\ntype Props = {};\r\n\r\ntype State = {\r\n  content: string;\r\n}\r\n\r\nexport default class Home extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"This is a PoC for SignalR\"\r\n    };\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   UserService.getPublicContent().then(\r\n  //     response => {\r\n  //       this.setState({\r\n  //         content: response.data\r\n  //       });\r\n  //     },\r\n  //     error => {\r\n  //       this.setState({\r\n  //         content:\r\n  //           (error.response && error.response.data) ||\r\n  //           error.message ||\r\n  //           error.toString()\r\n  //       });\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\nimport IUser from \"../types/user.type\";\r\n\r\ntype Props = {};\r\n\r\ntype State = {\r\n  redirect: string | null,\r\n  userReady: boolean,\r\n  currentUser: IUser & { accessToken: string }\r\n}\r\nexport default class Profile extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      redirect: null,\r\n      userReady: false,\r\n      currentUser: { accessToken: \"\" }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    if (!currentUser) this.setState({ redirect: \"/home\" });\r\n    this.setState({ currentUser: currentUser, userReady: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />\r\n    }\r\n\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {(this.state.userReady) ?\r\n          <div>\r\n            <header className=\"jumbotron\">\r\n              <h3>\r\n                <strong>{currentUser.username}</strong> Profile\r\n              </h3>\r\n            </header>\r\n            {/* <p>\r\n              <strong>Token:</strong>{\" \"}\r\n              {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n              {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n            </p> */}\r\n            <p>\r\n              <strong>Id:</strong>{\" \"}\r\n              {currentUser.id}\r\n            </p>\r\n            <p>\r\n              <strong>Email:</strong>{\" \"}\r\n              {currentUser.email}\r\n            </p>\r\n            <strong>Authorities:</strong>\r\n            <ul>\r\n              {currentUser.roles &&\r\n                currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n            </ul>\r\n          </div> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function authHeader() {\r\n  const userStr = localStorage.getItem(\"user\");\r\n  let user = null;\r\n  if (userStr)\r\n    user = JSON.parse(userStr);\r\n\r\n  if (user && user.accessToken) {\r\n    return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\r\n    // return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\r\n  } else {\r\n    return { Authorization: '' }; // for Spring Boot back-end\r\n    // return { 'x-access-token': null }; // for Node Express back-end\r\n  }\r\n}","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'http://localhost:8080/api/test/';\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all');\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","const eventBus = {\r\n  on(event: string, callback: EventListener) {\r\n    document.addEventListener(event, (e) => callback(e));\r\n  },\r\n  dispatch(event: string, data?: any) {\r\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\r\n  },\r\n  remove(event: string, callback: EventListener) {\r\n    document.removeEventListener(event, callback);\r\n  },\r\n};\r\n\r\nexport default eventBus;\r\n","import { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\ntype Props = {};\r\n\r\ntype State = {\r\n  content: string;\r\n}\r\n\r\nexport default class BoardUser extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\ntype Props = {};\r\n\r\ntype State = {\r\n  content: string;\r\n}\r\n\r\nexport default class BoardAdmin extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getModeratorBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\ntype Props = {};\r\n\r\ntype State = {\r\n  content: string;\r\n}\r\n\r\nexport default class BoardAdmin extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAdminBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport AuthService from \"./services/auth.service\";\r\nimport IUser from './types/user.type';\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardModerator from \"./components/board-moderator.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\n\r\nimport EventBus from \"./common/EventBus\";\r\n\r\ntype Props = {};\r\n\r\ntype State = {\r\n  showModeratorBoard: boolean,\r\n  showAdminBoard: boolean,\r\n  currentUser: IUser | undefined\r\n}\r\n\r\nclass App extends Component<Props, State> {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showModeratorBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showModeratorBoard: false,\r\n        showAdminBoard: false,\r\n      });\r\n    }\r\n\r\n    EventBus.on(\"logout\", this.logOut);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    EventBus.remove(\"logout\", this.logOut);\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n    this.setState({\r\n      showModeratorBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <Link to={\"/askia-lite-app\"} className=\"navbar-brand\">\r\n            Askia Lite\r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/askia-lite-app/home\"} className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n\r\n            {showModeratorBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/askia-lite-app/mod\"} className=\"nav-link\">\r\n                  Moderator Board\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/askia-lite-app/admin\"} className=\"nav-link\">\r\n                  Admin Board\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {currentUser && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/askia-lite-app/user\"} className=\"nav-link\">\r\n                  User\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </div>\r\n\r\n          {currentUser ? (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/askia-lite-app/profile\"} className=\"nav-link\">\r\n                  {currentUser.username}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/askia-lite-app/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                  LogOut\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/askia-lite-app/login\"} className=\"nav-link\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n            </div>\r\n          )}\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={[\"/askia-lite-app\", \"/askia-lite-app/home\"]} component={Home} />\r\n            <Route exact path=\"/askia-lite-app/login\" component={Login} />\r\n            <Route exact path=\"/askia-lite-app/profile\" component={Profile} />\r\n            <Route path=\"/askia-lite-app/user\" component={BoardUser} />\r\n            <Route path=\"/askia-lite-app/mod\" component={BoardModerator} />\r\n            <Route path=\"/askia-lite-app/admin\" component={BoardAdmin} />\r\n          </Switch>\r\n        </div>\r\n\r\n        { /*<AuthVerify logOut={this.logOut}/> */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import ReactDOM from 'react-dom';\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <App />\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}