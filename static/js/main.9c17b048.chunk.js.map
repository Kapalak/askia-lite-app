{"version":3,"sources":["services/auth.service.ts","logo.svg","components/login.component.tsx","components/home.component.tsx","components/profile.component.tsx","services/auth-header.ts","services/user.service.ts","common/EventBus.ts","components/board-user.component.tsx","components/board-moderator.component.tsx","components/board-admin.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["API_PORTAL_URL","username","password","axios","post","userName","then","catch","error","console","log","response","data","get","login","user","id","guid","email","localStorage","setItem","JSON","stringify","removeItem","userStr","getItem","parse","Login","props","handleLogin","bind","state","loading","message","Yup","shape","required","formValue","this","setState","AuthService","getInfo","history","push","window","location","reload","resMessage","toString","className","src","MyImage","alt","initialValues","validationSchema","onSubmit","htmlFor","name","type","component","disabled","role","Component","Home","content","Profile","redirect","userReady","currentUser","accessToken","getCurrentUser","to","roles","map","index","authHeader","Authorization","API_URL","headers","eventBus","on","event","callback","document","addEventListener","e","dispatch","dispatchEvent","CustomEvent","detail","remove","removeEventListener","BoardUser","UserService","getUserBoard","status","EventBus","BoardAdmin","getModeratorBoard","getAdminBoard","App","logOut","showModeratorBoard","showAdminBoard","undefined","logout","href","onClick","exact","path","BoardModerator","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9c17b048.chunk.js","sourcesContent":["import axios from \"axios\";\nimport IUser from \"../types/user.type\";\n\n// const API_PORTAL_URL = \"https://rapide-dev.ipsosinteractive.com/AskiaPortal/api/\";\n// const API_PORTAL_URL = \"http://localhost:8000/AskiaPortal/api/\";\nconst API_PORTAL_URL = \"https://8dd0d497-6cca-40d8-9835-5ca72559da33.mock.pstmn.io/AskiaPortal/api/\";\n\nclass AuthService {\n  login(username: string, password: string) {    \n    return axios\n    .post(API_PORTAL_URL + \"Account/SignIn\", {\n      userName: username,\n      password\n    })\n    .then(() => {\n      return true;\n    })\n    .catch(error => {\n      console.log(error.response.data.error);\n      return false;\n   });\n  }\n\n  getInfo() { \n    return axios.get(API_PORTAL_URL + \"Account/Info\")\n    .then(response => {\n      if (response.data.login) {\n        var user = {} as IUser;\n        user.id = response.data.guid;\n        user.username = response.data.login;\n        user.email = response.data.email;\n        localStorage.setItem(\"user\", JSON.stringify(user));\n        console.log(user);\n        return user;\n      }\n    });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  getCurrentUser() {\n    const userStr = localStorage.getItem(\"user\");\n    if (userStr) return JSON.parse(userStr);\n\n    return null;\n  }\n}\n\nexport default new AuthService();\n","export default __webpack_public_path__ + \"static/media/logo.b197ed51.svg\";","import MyImage from \"../logo.svg\";\nimport { Component } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport AuthService from \"../services/auth.service\";\n\ninterface RouterProps {\n  history: string;\n}\n\ntype Props = RouteComponentProps<RouterProps>;\n\ntype State = {\n  username: string;\n  password: string;\n  loading: boolean;\n  message: string;\n};\n\nexport default class Login extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\",\n    };\n  }\n\n  validationSchema() {\n    return Yup.object().shape({\n      username: Yup.string().required(\"This field is required!\"),\n      password: Yup.string().required(\"This field is required!\"),\n    });\n  }\n\n  handleLogin(formValue: { username: string; password: string }) {\n    const { username, password } = formValue;\n\n    this.setState({\n      message: \"\",\n      loading: true,\n    });\n\n\n\n    AuthService.login(username, password).then(() =>\n      AuthService.getInfo()\n        .then(\n          () => {\n            this.props.history.push(\"/askia-lite-app/profile\");\n            window.location.reload();\n          },\n          (error) => {\n            const resMessage =\n              (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n              error.message ||\n              error.toString();\n\n            this.setState({\n              loading: false,\n              message: resMessage,\n            });\n          }\n        )\n        .catch((error) => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n          console.log(resMessage);\n          this.setState({\n            loading: false,\n            message: resMessage,\n          });\n        })\n    );\n\n    // AuthService.login(username, password).then(\n    //   () => {\n    //     this.props.history.push(\"/profile\");\n    //     window.location.reload();\n    //   },\n    //   error => {\n    //     const resMessage =\n    //       (error.response &&\n    //         error.response.data &&\n    //         error.response.data.message) ||\n    //       error.message ||\n    //       error.toString();\n\n    //     this.setState({\n    //       loading: false,\n    //       message: resMessage\n    //     });\n    //   }\n    // );\n  }\n\n  render() {\n    const { loading, message } = this.state;\n\n    const initialValues = {\n      username: \"\",\n      password: \"\",\n    };\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img src={MyImage} alt=\"profile-img\" className=\"profile-img-card\" />\n\n          <Formik\n            initialValues={initialValues}\n            validationSchema={this.validationSchema}\n            onSubmit={this.handleLogin}\n          >\n            <Form>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Field name=\"username\" type=\"text\" className=\"form-control\" />\n                <ErrorMessage\n                  name=\"username\"\n                  component=\"div\"\n                  className=\"alert alert-danger\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Field\n                  name=\"password\"\n                  type=\"password\"\n                  className=\"form-control\"\n                />\n                <ErrorMessage\n                  name=\"password\"\n                  component=\"div\"\n                  className=\"alert alert-danger\"\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block\"\n                  disabled={loading}\n                >\n                  {loading && (\n                    <span className=\"spinner-border spinner-border-sm\"></span>\n                  )}\n                  <span>Login V2</span>\n                </button>\n              </div>\n\n              {message && (\n                <div className=\"form-group\">\n                  <div className=\"alert alert-danger\" role=\"alert\">\n                    {message}\n                  </div>\n                </div>\n              )}\n            </Form>\n          </Formik>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\n\ntype Props = {};\n\ntype State = {\n  content: string;\n}\n\nexport default class Home extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      content: \"This is a PoC for SignalR\"\n    };\n  }\n\n  // componentDidMount() {\n  //   UserService.getPublicContent().then(\n  //     response => {\n  //       this.setState({\n  //         content: response.data\n  //       });\n  //     },\n  //     error => {\n  //       this.setState({\n  //         content:\n  //           (error.response && error.response.data) ||\n  //           error.message ||\n  //           error.toString()\n  //       });\n  //     }\n  //   );\n  // }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\nimport IUser from \"../types/user.type\";\n\ntype Props = {};\n\ntype State = {\n  redirect: string | null,\n  userReady: boolean,\n  currentUser: IUser & { accessToken: string }\n}\nexport default class Profile extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { accessToken: \"\" }\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = AuthService.getCurrentUser();\n\n    if (!currentUser) this.setState({ redirect: \"/home\" });\n    this.setState({ currentUser: currentUser, userReady: true })\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        {(this.state.userReady) ?\n          <div>\n            <header className=\"jumbotron\">\n              <h3>\n                <strong>{currentUser.username}</strong> Profile\n              </h3>\n            </header>\n            {/* <p>\n              <strong>Token:</strong>{\" \"}\n              {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n              {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n            </p> */}\n            <p>\n              <strong>Id:</strong>{\" \"}\n              {currentUser.id}\n            </p>\n            <p>\n              <strong>Email:</strong>{\" \"}\n              {currentUser.email}\n            </p>\n            <strong>Authorities:</strong>\n            <ul>\n              {currentUser.roles &&\n                currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n            </ul>\n          </div> : null}\n      </div>\n    );\n  }\n}\n","export default function authHeader() {\n  const userStr = localStorage.getItem(\"user\");\n  let user = null;\n  if (userStr)\n    user = JSON.parse(userStr);\n\n  if (user && user.accessToken) {\n    return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n    // return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\n  } else {\n    return { Authorization: '' }; // for Spring Boot back-end\n    // return { 'x-access-token': null }; // for Node Express back-end\n  }\n}","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:8080/api/test/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","const eventBus = {\n  on(event: string, callback: EventListener) {\n    document.addEventListener(event, (e) => callback(e));\n  },\n  dispatch(event: string, data?: any) {\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\n  },\n  remove(event: string, callback: EventListener) {\n    document.removeEventListener(event, callback);\n  },\n};\n\nexport default eventBus;\n","import { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\nimport EventBus from \"../common/EventBus\";\n\ntype Props = {};\n\ntype State = {\n  content: string;\n}\n\nexport default class BoardUser extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n\n        if (error.response && error.response.status === 401) {\n          EventBus.dispatch(\"logout\");\n        }\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\nimport EventBus from \"../common/EventBus\";\n\ntype Props = {};\n\ntype State = {\n  content: string;\n}\n\nexport default class BoardAdmin extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n\n        if (error.response && error.response.status === 401) {\n          EventBus.dispatch(\"logout\");\n        }\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\nimport EventBus from \"../common/EventBus\";\n\ntype Props = {};\n\ntype State = {\n  content: string;\n}\n\nexport default class BoardAdmin extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n\n        if (error.response && error.response.status === 401) {\n          EventBus.dispatch(\"logout\");\n        }\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\nimport IUser from './types/user.type';\n\nimport Login from \"./components/login.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\n\nimport EventBus from \"./common/EventBus\";\n\ntype Props = {};\n\ntype State = {\n  showModeratorBoard: boolean,\n  showAdminBoard: boolean,\n  currentUser: IUser | undefined\n}\n\nclass App extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: false,\n        showAdminBoard: false,\n      });\n    }\n\n    EventBus.on(\"logout\", this.logOut);\n  }\n\n  componentWillUnmount() {\n    EventBus.remove(\"logout\", this.logOut);\n  }\n\n  logOut() {\n    AuthService.logout();\n    this.setState({\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    });\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/askia-lite-app\"} className=\"navbar-brand\">\n            Askia Lite\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/mod\"} className=\"nav-link\">\n                  Moderator Board\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Admin Board\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  User\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/mod\" component={BoardModerator} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n          </Switch>\n        </div>\n\n        { /*<AuthVerify logOut={this.logOut}/> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}